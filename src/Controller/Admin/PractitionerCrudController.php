<?php

namespace App\Controller\Admin;

use App\Entity\User\Practitioner;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\ArrayField;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ChoiceField;
use EasyCorp\Bundle\EasyAdminBundle\Field\EmailField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;

class PractitionerCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Practitioner::class;
    }

    public function configureCrud(Crud $crud): Crud
    {
        return parent::configureCrud($crud)
            ->showEntityActionsInlined(); // TODO: Change the autogenerated stub
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            IdField::new('id')->onlyOnIndex(),
            TextField::new('firstName'),
            TextField::new('lastName'),
            EmailField::new('email'),
            TextField::new('password')->setFormType(PasswordType::class),
            ArrayField::new('roles'),
            BooleanField::new('isVerified'),
            ImageField::new('avatar')
                ->setBasePath('uploads/avatars')
                ->setUploadDir('public/avatars/uploads'),
            TextEditorField::new('description')->hideOnIndex(),
            ChoiceField::new('languages')
                ->setChoices([
                    'franÃ§ais' => 'fr',
                    'anglais' => 'en',
                    'allemand' => 'de',
                    'luxembourgeois' => 'lu',
                ])
                ->allowMultipleChoices()->renderAsBadges(),

            AssociationField::new('specialities')

        ];
    }

}
